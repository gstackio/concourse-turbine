---

jobs:
  - name: detect-concourse
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: concourse-bosh-deployment
            trigger: true
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-concourse-deployment-tag
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-git-tag.yml
        input_mapping:
          git: concourse-bosh-deployment

      - task: bump-concourse-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-input-resource.yml
        input_mapping:
          git: concourse-turbine
        params:
          SPEC_FILE: deployments/concourse/conf/spec.yml
          INPUT_RESOURCE_NAME: concourse-deployment
          ARTIFACT_HUMAN_NAME: Concourse

      - &git_commit_task
        task: git-commit
        image: image
        file: gk-automation/boshrelease/git-commit.yml
        input_mapping:
          repo: git-bumped
        params:
          GIT_COMMIT_NAME: ((git_commit_name))
          GIT_COMMIT_EMAIL: ((git-commit-email))

      - &git_push_task
        task: git-push
        image: image
        file: gk-automation/boshrelease/git-push.yml
        input_mapping:
          repo: repo-committed
        params:
          BRANCH_NAME: master
          GIT_URI: ((git_uri))
          GITHUB_PRIVATE_KEY: ((github-private-key))

  - name: detect-os-conf
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: os-conf-bosh-io-release
            trigger: true
            params: { tarball: false }
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-os-conf-version
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-artifact-version.yml
        input_mapping:
          artifact: os-conf-bosh-io-release

      - task: bump-os-conf-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-deployment-vars.yml
        input_mapping:
          git: concourse-turbine
        params:
          SPEC_FILE: deployments/concourse/conf/spec.yml
          YAML_PROP_PREFIX: os_conf
          ARTIFACT_HUMAN_NAME: OS-Conf BOSH Release

      - *git_commit_task

      - *git_push_task

  - name: detect-credhub
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: credhub-bosh-io-release
            trigger: true
            params: { tarball: false }
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-credhub-version
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-artifact-version.yml
        input_mapping:
          artifact: credhub-bosh-io-release

      - task: bump-credhub-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-deployment-vars.yml
        input_mapping:
          git: concourse-turbine
        params:
          SPEC_FILE: deployments/concourse/conf/spec.yml
          YAML_PROP_PREFIX: credhub
          ARTIFACT_HUMAN_NAME: Credhub BOSH Release

      - *git_commit_task

      - *git_push_task

  - name: detect-uaa
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: uaa-bosh-io-release
            trigger: true
            params: { tarball: false }
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-uaa-version
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-artifact-version.yml
        input_mapping:
          artifact: uaa-bosh-io-release

      - task: bump-uaa-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-deployment-vars.yml
        input_mapping:
          git: concourse-turbine
        params:
          SPEC_FILE: deployments/concourse/conf/spec.yml
          YAML_PROP_PREFIX: uaa
          ARTIFACT_HUMAN_NAME: UAA BOSH Release

      - *git_commit_task

      - *git_push_task

  - name: detect-bbr
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: bbr-bosh-io-release
            trigger: true
            params: { tarball: false }
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-bbr-version
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-artifact-version.yml
        input_mapping:
          artifact: bbr-bosh-io-release

      - task: bump-bbr-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-deployment-vars.yml
        input_mapping:
          git: concourse-turbine
        params:
          SPEC_FILE: deployments/concourse/conf/spec.yml
          YAML_PROP_PREFIX: bbr_sdk
          ARTIFACT_HUMAN_NAME: BBR BOSH Release

      - *git_commit_task

      - *git_push_task

  - name: detect-traefik
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: traefik-boshrelease-gh-release
            trigger: true
            params: { globs: [ traefik-*.tgz ] }
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-traefik-release-info
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-bosh-release-gh-release-info.yml
        input_mapping:
          github-release: traefik-boshrelease-gh-release
        params:
          BOSH_RELEASE_TABALL: traefik-*.tgz

      - task: bump-traefik-deployment-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-input-resource.yml
        input_mapping:
          git: concourse-turbine
          git-info: release-info
        params:
          SPEC_FILE: deployments/traefik/conf/spec.yml
          INPUT_RESOURCE_NAME: traefik-boshrelease
          ARTIFACT_HUMAN_NAME: Traefik BOSH Release

      - task: bump-traefik-boshrelease-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-deployment-vars.yml
        input_mapping:
          git: git-bumped
          artifact-info: release-info
        params:
          SPEC_FILE: deployments/concourse/conf/spec.yml
          YAML_PROP_PREFIX: traefik
          ARTIFACT_HUMAN_NAME: Traefik BOSH Release

      - *git_commit_task

      - *git_push_task

  - name: detect-warden-stemcell
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: warden-stemcell
            trigger: true
            params: { tarball: false }
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-warden-stemcell-version
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-artifact-version.yml
        input_mapping:
          artifact: warden-stemcell

      - task: bump-warden-stemcell-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-deployment-vars.yml
        input_mapping:
          git: concourse-turbine
        params:
          SPEC_FILE: deployments/traefik/conf/spec.yml
          YAML_PROP_PREFIX: stemcell
          ARTIFACT_HUMAN_NAME: Warden BOSH-Lite Stemcell

      - *git_commit_task

      - *git_push_task

  - name: detect-vsphere-stemcell
    serial: true
    serial_groups: [ detect ]
    plan:
      - in_parallel:
          - get: artifact
            resource: vsphere-stemcell
            trigger: true
            params: { tarball: false }
          - get: concourse-turbine
          - get: image
          - get: gk-automation

      - task: capture-vsphere-stemcell-version
        image: image
        file: concourse-turbine/ci/bump/tasks/capture-artifact-version.yml

      - task: bump-vsphere-stemcell-version
        image: image
        file: concourse-turbine/ci/bump/tasks/bump-deployment-vars.yml
        input_mapping:
          git: concourse-turbine
        params:
          SPEC_FILE: ddbox-garden-env/conf/spec.yml
          YAML_PROP_PREFIX: stemcell
          ARTIFACT_HUMAN_NAME: vSphere ESXi Stemcell

      - *git_commit_task

      - *git_push_task


resources:

  - name: image
    type: docker-image
    icon: docker
    source:
      repository: ((docker_ops_image_repo))
      username: ((docker_registry_username))
      password: ((docker-registry-password))
    check_every: 24h

  - name: gk-automation
    type: git
    icon: github
    source:
      uri: git@github.com:gstackio/gk-automation.git
      branch: master
      private_key: ((github-private-key))
    check_every: 24h

  - name: concourse-turbine
    type: git
    icon: github
    source:
      uri: ((git_uri))
      branch: master
      private_key: ((github-private-key))
    check_every: 24h

  - name: concourse-bosh-deployment
    old_name: concourse-deployment-tag
    type: git
    icon: github
    source:
      uri: git@github.com:concourse/concourse-bosh-deployment.git
      branch: master
      tag_filter: ((concourse_version_constraint))
      # tag_regex:  ((concourse_version_constraint))
      private_key: ((github-private-key))
    check_every: 24h

  - name: os-conf-bosh-io-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/os-conf-release
    check_every: 24h

  - name: credhub-bosh-io-release
    type: bosh-io-release
    source:
      repository: pivotal-cf/credhub-release
    check_every: 24h

  - name: uaa-bosh-io-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/uaa-release
    check_every: 24h

  - name: bbr-bosh-io-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/backup-and-restore-sdk-release
    check_every: 24h

  - name: traefik-boshrelease-gh-release
    type: github-release
    icon: github
    source:
      owner: gstackio
      repository: traefik-boshrelease
      pre_release: false
      tag_filter: v(\d+\.\d+\.\d+)
      access_token: ((github-access-token))
    check_every: 1h

  - name: warden-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-xenial-go_agent
      version_family: ((stemcell_version_constraint))
    check_every: 24h

  - name: vsphere-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-vsphere-esxi-ubuntu-xenial-go_agent
      version_family: ((stemcell_version_constraint))
    check_every: 24h

resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: harbor.ci.gstack.io/swce/keyval-resource
      username: ((docker_registry_username))
      password: ((docker-registry-password))
