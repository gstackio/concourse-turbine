#!/usr/bin/env bash

set -euo pipefail

function main() {
    setup
    cd "${SUBSYS_DIR}" || exit 115

    local concourse_fqdn atc_username atc_password default_concourse_target
    concourse_fqdn=$(priv_cfg_var "/external_domain")
    atc_username=$(priv_cfg_var "/atc_basic_auth_username")
    atc_password=$(creds_var "/atc_basic_auth_password")

    default_concourse_target=$(spec_var "/sanity-tests/concourse-target")
    local concourse_target=${1:-"${default_concourse_target}"}
    shift

    if [[ ! -e "${BASE_DIR}/bin/fly" ]]; then
        bash ${DEBUG:+"-x"} "${SUBSYS_DIR}/fetch-fly-cli"
    fi

    # When target does not exist yet the following will create it. When it is
    # outdated, this will set it properly, then the 'fly sync' below will
    # solve the version mismatch.
    set +e
    "${BASE_DIR}/bin/fly" --target="${concourse_target}" login --insecure \
        --concourse-url="https://${concourse_fqdn}" \
        --username="${atc_username}" --password="${atc_password}" \
        "$@"
    login_status=$?
    set -e

    "${BASE_DIR}/bin/fly" --target="${concourse_target}" sync

    if [[ "${login_status}" -ne 0 ]]; then
        # Try to log in again, if by any chance it failed because of version
        # mismatch that would be solved by the 'fly sync' above.
        set +e
        "${BASE_DIR}/bin/fly" --target="${concourse_target}" login --insecure \
            --concourse-url="https://${concourse_fqdn}" \
            --username="${atc_username}" --password="${atc_password}" \
            "$@"
        login_status=$?
        set -e
    fi

    if [[ "${login_status}" -eq 0 ]]; then
        echo "${BOLD}${GREEN}OK${RESET}"
    else
        echo "${BOLD}${RED}ERROR${RESET}"
    fi
    exit "${login_status}"
}

function setup() {
    SUBSYS_DIR=${SUBSYS_DIR:-$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)}
    BASE_DIR=${BASE_DIR:-$(cd "${SUBSYS_DIR}" && git rev-parse --show-toplevel)}
    SUBSYS_NAME=$(own_spec_var /subsys/name)
    readonly SUBSYS_DIR BASE_DIR SUBSYS_NAME

    BOLD=$(tput bold)
    RED=$(tput setaf 1)
    GREEN=$(tput setaf 2)
    RESET=$(tput sgr0)
    readonly BOLD RED GREEN RESET
}

function priv_cfg_var() {
    local path=$1
    bosh interpolate "${SUBSYS_DIR}/conf/private-config.yml" --path="${path}"
}

function own_spec_var() {
    local path=$1
    bosh interpolate "${SUBSYS_DIR}/conf/spec.yml" --path="${path}"
}

function spec_var() {
    local path=$1

    local has_upstream  spec_file
    has_upstream=$(own_spec_var "/subsys/upstream" 2> /dev/null || true)
    if [[ -n "${has_upstream}" ]]; then
        state_var "merged-spec" "${path}"
    else
        own_spec_var "${path}"
    fi
}

function state_var() {
    local state_file=$1
    local path=$2
    bosh interpolate "${BASE_DIR}/state/${SUBSYS_NAME}/${state_file}.yml" --path="${path}"
}

function creds_var() {
    state_var "depl-creds" "$1"
}

main "$@"
